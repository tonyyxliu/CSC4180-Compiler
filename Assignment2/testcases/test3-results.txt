TINT int
LBRACKET [
RBRACKET ]
ID f
LPAREN (
TINT int
LBRACKET [
RBRACKET ]
ID x
COMMA ,
TINT int
LBRACKET [
RBRACKET ]
ID y
COMMA ,
TBOOL bool
ID b
RPAREN )
LBRACE {
IF if
LPAREN (
ID b
RPAREN )
LBRACE {
RETURN return
ID x
SEMICOLON ;
RBRACE }
ELSE else
LBRACE {
RETURN return
ID y
SEMICOLON ;
RBRACE }
RBRACE }
GLOBAL global
ID x
ASSIGN =
NEW new
TINT int
LBRACKET [
RBRACKET ]
LBRACE {
INTLITERAL 1
COMMA ,
INTLITERAL 2
COMMA ,
INTLITERAL 3
RBRACE }
SEMICOLON ;
GLOBAL global
ID y
ASSIGN =
NEW new
TINT int
LBRACKET [
RBRACKET ]
LBRACE {
INTLITERAL 4
COMMA ,
INTLITERAL 5
COMMA ,
INTLITERAL 6
RBRACE }
SEMICOLON ;
TINT int
ID program
LPAREN (
TINT int
ID argc
COMMA ,
TSTRING string
LBRACKET [
RBRACKET ]
ID argv
RPAREN )
LBRACE {
ID f
LPAREN (
ID x
COMMA ,
ID y
COMMA ,
TRUE true
RPAREN )
LBRACKET [
INTLITERAL 0
RBRACKET ]
ASSIGN =
INTLITERAL 17
SEMICOLON ;
COMMENT /* non-trivial lhs */
VAR var
ID z
ASSIGN =
ID f
LPAREN (
ID x
COMMA ,
ID y
COMMA ,
TRUE true
RPAREN )
LBRACKET [
INTLITERAL 0
RBRACKET ]
PLUS +
ID f
LPAREN (
ID y
COMMA ,
ID x
COMMA ,
FALSE false
RPAREN )
LBRACKET [
INTLITERAL 0
RBRACKET ]
SEMICOLON ;
RETURN return
ID z
SEMICOLON ;
COMMENT /* returns the value 34 */
RBRACE }
